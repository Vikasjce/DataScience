R commands

##Create a data frame from variable vectors
first_name <- c("Vikas","Vijay","Gaurav")
last_name <- c("kamath","thota","wadnerkar")
age <- c(32,33,33)
employee <- data.frame(first_name,last_name,age)

#basic Functions to check the dataframe
trees # Dataframe that is created
?trees # gives information of the dataset if already there 
head(trees) # First 6 columns 
nrow(trees) # Number of rows in the dataset
ncol(trees) #Number of Columns in the dataset
names(trees) # Names of the columns in the dataset
dim(trees) # gives the dimension of the dataset number of rows and columns
summary(trees) # gives the statistics of the data column by column mean,median,mode quartile etc
str(trees) #gives the columns and their datatypes

# Str function in R is the first thing to do to understand the dataset and their columns
?str # help command 
data() # Internal Data sets in R
str(AirPassengers)
str(trees)
str(airquality)

# read file from a URL into R
cd = read.csv("https://chronicdata.cdc.gov/api/views/g4ie-h725/rows.csv?accessType=DOWNLOAD") # read a CSV from a URL 
str(airquality) # Structure of the data
summary(airquality) # Summary on the columns will tell count for Label coulmns and Stats for Continuous data 
head(airquality) # Gives the firt 6 columns  
summary(airquality$Temp) # Summary for a specific temperature
airquality$TempdegreeC <- (airquality$Temp - 32 ) * (5/9) # Convetrting and adding new column for Temperature in degree centigrade 
summary(airquality$TempdegreeC) # Summary of degree Centigrade newly created column

# Json installation (Try again)
install.packages("jsonlite") # Install Json lite package
install.packages("httr") # Install dependent package 
library(jsonlite)
jd <- jsonlite::fromJSON("https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA")
str(jd) 
names(jd)
jd$results
jd$results$formatted_address
jd$results$address_components
jd$results$address_components[[1]].$

# foreach (try again)

# Reshape (try again)

# Merge 2 dataframes on a like column
emp <- data.frame(name=c("John","Joe"),ID=c(1,2), stringsAsFactors = FALSE) # Create a data frame of 2 columns and 2 rows 
cnt <- data.frame(ID=c(1,2),country=c("USA","UK"),stringsAsFactors = FALSE) # Create a data frame of 2 columns and 2 rows 
str(emp) # function to check the data
str(cnt) # function to check the data
nrow(emp) 
ncol(emp)
mrg <- merge(emp,cnt,by="ID")
mrg

# Transposing data
carmpg <- mtcars[order(-mtcars$mpg),] # Order the car with the best gas mileage at the top
head(carmpg) # Selects only the first 6 rows
carmpg <- carmpg[1:10,c(1,2,4,6)]  # Selects the first 10 rows and only columns required
carmpg
carmpg <- data.frame(t(carmpg)) # Transpose the data
carmpg[1,] # Selects the first row only 
carmpg$Toyota.Corolla

# Aggregate the data 
?aggregate
mtcars # Mt cars is the list of the data
ag <- aggregate(mtcars$mpg,list(mtcars$cyl),median) # Agrregate the mpg group by Cyl and run the median function as the aggregator function
ag




